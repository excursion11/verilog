/***********************************************************\

		Filename		:		freq_div.v
		Author			:		wgs
		Email			:		
		Description		:		frequency divider
		Version			:		v1.0
		modification	:		2021.12.8
		
\***********************************************************/

module freq_div(
				clk_in,
				rst_n,
				clk_out
			   );            

	localparam	div_width = 3,			//分频计数器位宽
				fre_div = 7; 			//分频数
	
	input	wire	clk_in	;
	input	wire	rst_n	;
	output	wire	clk_out	;
	/*	偶数分频参数	*/	
	reg 	clk_even;
	reg 	[div_width-1:0]		clk_even_cnt;	
	/*	奇数分频参数	*/
	reg 	clk_1,clk_2;				//上升沿和下降沿时钟
	wire	clk_odd;
	reg 	[div_width-1:0]		clk_1_cnt	,	clk_2_cnt;		//奇数计数器

assign	clk_out = (fre_div == 1'b1)? clk_in : (fre_div[0]? clk_odd : clk_even); //输出
assign	clk_odd = clk_1 | clk_2;

//偶数分频情况
always @ (posedge clk_in or negedge rst_n)
	begin
		if (!rst_n)
            begin
	            clk_even <= 1'b0;
   		        clk_even_cnt <= 3'd0;
            end
        else if (clk_even_cnt == fre_div/2-1)
			begin
	            clk_even <= ~clk_even;
   		        clk_even_cnt <= clk_even_cnt + 1'b1;
            end
		else if (clk_even_cnt == fre_div - 1)
            begin
	            clk_even <= ~clk_even;
   	            clk_even_cnt <= 3'd0;
			end
        else
            begin
             	clk_even <= clk_even;
   		        clk_even_cnt <= clk_even_cnt + 1'b1;
            end
	end

//奇数分频情况
always @ (posedge clk_in or negedge rst_n)		//上升沿产生分频时钟
	begin
		if (!rst_n)
			begin
				clk_1 <= 1'b0;
				clk_1_cnt <= 3'd0;
			end
		else if (clk_1_cnt  == (fre_div-1)/2)		//低电平时间比高电平时间多一个周期
            begin
				clk_1 <= ~clk_1;
				clk_1_cnt  <= clk_1_cnt + 1'b1;
			end
		else if (clk_1_cnt  == fre_div - 1)
            begin
		        clk_1 <= ~clk_1;
    		    clk_1_cnt  <= 3'd0;
		    end
		else
            begin
		        clk_1 <= clk_1;
    		    clk_1_cnt  <= clk_1_cnt  + 1'b1;
		    end
	end

always @ (posedge clk_in or negedge rst_n)			//下降沿产生分频时钟
	begin
		if (!rst_n)
			begin
				clk_2 <= 1'b0;
				clk_2_cnt <= 3'd0;
			end
		else if (clk_2_cnt  == (fre_div-1)/2)
            begin
				clk_2 <= ~clk_2;
				clk_2_cnt  <= clk_2_cnt + 1'b1;
			end
		else if (clk_2_cnt  == fre_div - 1)
            begin
		        clk_2 <= ~clk_2;
    		    clk_2_cnt  <= 3'd0;
		    end
		else
            begin
		        clk_2 <= clk_2;
    		    clk_2_cnt  <= clk_2_cnt  + 1'b1;
		    end
	end
endmodule

